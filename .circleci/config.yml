version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.10
  aws-ecs: circleci/aws-ecs@0.0.8
  slack: circleci/slack@3.4.2
jobs:
  test:
    docker:
      - image: ruby:2.5.3
        environment:
          - DATABASE_HOST: db
          - DATABASE_USERNAME: root
          - DATABASE_PASSWORD: root
          - DATABASE_NAME: slot_sns
          - BUNDLER_VERSION: 2.0.2
          - RAILS_ENV: 'test'
      - image: mysql:5.7
        environment:
          - MYSQL_ROOT_PASSWORD: root
          - MYSQL_USER: develop
          - MYSQL_PASSWORD: develop
          - TZ: Asia/Tokyo
        name: db
    steps:
      - checkout
      - run:
          name: install bundles
          command: |
            gem install bundler -v 2.0.2
            bundle install
      - run:
          name: Create Database
          command: |
            bundle exec rake db:create
            bundle exec rake db:migrate  
            bundle exec rake db:schema:load
      - run:
          name: Run test codes with RSpec
          command: |
            mkdir /tmp/test-results
            bundle exec rspec \
            --format RspecJunitFormatter \
            --out /tmp/test-results/rspec.xml \
            --format progress \
            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - slack/status:
          fail_only: true
          failure_message: '${CIRCLE_PROJECT_REPONAME}/${CIRCIE_BLANCH}のテストに失敗しました。\n
                            BUILD_URL:${CIRCLE_BUILD_URL}\n
                            PULL_REQUESTS:${CIRCLE_PULL_REQUESTS}'
          webhook: ${SLACK_WEBHOOK}

workflows:
  test:
    jobs:
      - test

  deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
      - aws-ecr/build_and_push_image:
          requires:
            - test
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: "inner_api"
          region: AWS_DEFAULT_REGION
          tag: "latest"
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build_and_push_image
          aws-region: AWS_DEFAULT_REGION
          family: "InnerAPI"
          cluster-name: "SlotSNSInnerAPI"
          service-name: "SlotSNSInnerAPI"
          container-image-name-updates: "container=InnerAPI,tag=latest"
          filters:
            branches:
              only:
                - master
      - slack/status:
          success_message: '${CIRCLE_PROJECT_REPONAME}のデプロイに成功しました。'
          failure_message: '${CIRCLE_PROJECT_REPONAME}のデプロイに失敗しました。'
          webhook: ${SLACK_WEBHOOK}
